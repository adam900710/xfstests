#! /bin/bash
# FS QA Test 201
#
# Btrfs inband dedup enable/disable race with metadata balance
#
# This tests will test the following bugs exposed in development:
# 1) enable/disable race
# 2) tree balance cause delayed ref corruption
# 3) disable and balance cause BUG_ON
#
#-----------------------------------------------------------------------
# Copyright (c) 2016 Fujitsu.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -f $tmp.*
	killall $FSSTRESS_PROG &> /dev/null
	kill $trigger_pid &> /dev/null
	kill $balance_pid &> /dev/null
	wait

	# See comment later
	$BTRFS_UTIL_PROG balance cancel $SCRATCH_MNT &> /dev/null
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# remove previous $seqres.full before test
rm -f $seqres.full

# real QA test starts here

_supported_fs btrfs
_supported_os Linux
_require_scratch
_require_btrfs_subcommand dedupe
_require_btrfs_fs_feature dedupe

# Use 64K dedupe size to keep compatibility for 64K page size
dedupe_bs=64K

_scratch_mkfs >> $seqres.full 2>&1
_scratch_mount

mkdir -p $SCRATCH_MNT/stressdir

runtime=$((60 * $TIME_FACTOR))

trigger_work()
{
	while true; do
		_run_btrfs_util_prog dedupe enable -s inmemory \
			-b $dedupe_bs $SCRATCH_MNT
		sleep 1
		_run_btrfs_util_prog dedupe disable $SCRATCH_MNT
		sleep 1
	done
}

# redirect all output, as error output like 'balance cancelled by user'
# will populuate the golden output.
_btrfs_stress_balance -m $SCRATCH_MNT &> /dev/null &
balance_pid=$!

$FSSTRESS_PROG $(_scale_fsstress_args -p 1 -n 10000000) $FSSTRESS_AVOID \
	-d $SCRATCH_MNT/stressdir > /dev/null 2>&1 &

trigger_work &
trigger_pid=$!

sleep $runtime
killall $FSSTRESS_PROG &> /dev/null
kill $trigger_pid &> /dev/null
kill $balance_pid &> /dev/null
wait

# Manually stop balance as it's possible balance is still running for a short
# time. And we don't want to populate $seqres.full, so call $BTRFS_UTIL_PROG
# directly
$BTRFS_UTIL_PROG balance cancel $SCRATCH_MNT &> /dev/null

echo "Silence is golden"
# success, all done
status=0
exit
